name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  JOB_STARTED_AT: ${{ github.event.created_at }}
  CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
  CR_IMAGE_FRONTEND: ${{ secrets.CR_IMAGE_FRONTEND }}
  CR_IMAGE_FRONTEND_DEV: ${{ secrets.CR_IMAGE_FRONTEND_DEV }}
  PROD_URL: ${{ secrets.PROD_URL }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  build-frontend-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Registry
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build and Push Image
        run: |
          docker build \
          --pull \
          --build-arg NEXT_PUBLIC_REDIRECT_HOSTNAME=${{ env.PROD_URL }} \
          --cache-from cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest \
          --label "org.image.title=${{ github.repository }}" \
          --label "org.image.url=${{ github.repositoryUrl }}" \
          --label "org.image.created=${{ env.JOB_STARTED_AT }}" \
          --label "org.image.revision=${{ github.ref_name }}" \
          --label "org.image.version=${{ github.sha }}" \
          --tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }} \
          .
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }}
          docker tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:${{ github.sha }} \
            cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND }}:latest
  build-frontend-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Registry
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build and Push Image
        run: |
          docker build \
          --pull \
          --cache-from cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:latest \
          --label "org.image.title=${{ github.repository }}" \
          --label "org.image.url=${{ github.repositoryUrl }}" \
          --label "org.image.created=${{ env.JOB_STARTED_AT }}" \
          --label "org.image.revision=${{ github.ref_name }}" \
          --label "org.image.version=${{ github.sha }}" \
          --tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:${{ github.sha }} \
          --file=Dockerfile.dev \
          .
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:${{ github.sha }}
          docker tag cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:${{ github.sha }} \
            cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:latest
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_IMAGE_FRONTEND_DEV }}:latest
  deploy:
    runs-on: mn-voting-app-runner
    needs: [build-frontend-prod, build-frontend-dev]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        run: |
          cd ${{ secrets.PRODUCTION_FOLDER }}
          docker compose --env-file .env.local pull
          docker compose --env-file .env.local up -d
